scalar EmailAddress
directive @auth on FIELD_DEFINITION | FIELD

type Query{
	getAllUsers:[User]!
	getUserByEmail(email:EmailAddress!):User
	getUserById(id:ID!):User!
	me:User! @auth
}

type Mutation{
	createUser(user:createUser!):User!
	login(email:String!,password:String!):Auth!
}

type Auth{
	token:String!,
	message:String!
}

type User {
	_id:ID!
	email:String!
	password:String!
	phone:String!
	name:String!
	photo_url:String
	direction:Direction
	is_active:Boolean
}

type Direction{
	type:String!
	coordinates:[Float]!
}



input createUser{
	email:String!
	password:String!
	phone:String!
	name:String!
	photo_url:String
	direction:createDirection
}

input createDirection{
	type:String!
	coordinates:[Float]!
}

# type Query{
# 	saludo(nombre:String!):Int! 
# 	allPeople:[Persona]!
# 	singlePerson(position:Int!):Persona
# }

# type Mutation{
# 	addPeople(data:createPersona!):Persona!
# }

# type Persona {
# 	nombre:String!
# 	apellidos:String!
# 	edad:Int
# }

# input createPersona{
# 	nombre:String!
# 	apellidos:String!
# 	edad:Int
# }


